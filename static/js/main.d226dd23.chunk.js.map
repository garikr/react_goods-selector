{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","clearSelectedGoods","setState","selectGood","good","removeGood","length","filter","currentGood","this","className","join","type","onClick","goodsFromServer","map","classNames","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAe,CACbC,cAAe,CAAC,QAFpB,EAKEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEF,cAAe,CAAC,wBANpC,EASEG,WAAa,SAACC,GACZ,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SACkB,sBAArBF,EAAc,GACV,CAAEA,cAAc,GAAD,mBAAMA,GAAN,CAAqBI,KACpC,CAAEJ,cAAe,CAACI,MAf5B,EAmBEC,WAAa,SAACD,GACZ,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SACHF,EAAcM,OAAS,EACnB,CACAN,cAAc,YACTA,EAAcO,QAAO,SAAAC,GAAW,OAAIA,IAAgBJ,OAGzD,CAAEJ,cAAe,CAAC,wBA7B5B,4CAiCE,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cAER,OACE,uBAAMU,UAAU,MAAhB,UACE,wBAAQA,UAAU,cAAlB,SACwB,sBAArBV,EAAc,IACZA,EAAcM,OAAS,EAEtB,qCACE,qBAAII,UAAU,aAAd,UACGV,EAAcW,KAAK,MACnBX,EAAcM,OAAS,EACpB,gBACA,kBAGN,wBACEM,KAAK,SACLF,UAAU,aACVG,QAASJ,KAAKR,mBAHhB,sBAUF,oBAAIS,UAAU,aAAd,iCAMN,oBAAIA,UAAU,YAAd,SACGI,EAAgBC,KAAI,SAAAX,GAAI,OACvB,sBAAKM,UAAU,iBAAf,UACE,oBACEA,UAAWM,IACT,OACA,CACE,eAAgBhB,EAAciB,SAASb,KAJ7C,SAQGA,IAGDJ,EAAciB,SAASb,GAarB,wBACEQ,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKR,WAAWD,IAJpB,oBAXA,wBACEQ,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKV,WAAWC,IAJpB,mCAlFlB,GAAyBc,aCPzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d226dd23.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport { Component } from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: ['No goods selected'] });\n  };\n\n  selectGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState(\n      selectedGoods[0] !== 'No goods selected'\n        ? { selectedGoods: [...selectedGoods, good] }\n        : { selectedGoods: [good] },\n    );\n  };\n\n  removeGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState(\n      selectedGoods.length > 1\n        ? {\n          selectedGoods: [\n            ...selectedGoods.filter(currentGood => currentGood !== good),\n          ],\n        }\n        : { selectedGoods: ['No goods selected'] },\n    );\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          {selectedGoods[0] !== 'No goods selected'\n          && selectedGoods.length > 0\n            ? (\n              <>\n                <h1 className=\"App__title\">\n                  {selectedGoods.join(', ')}\n                  {selectedGoods.length > 1\n                    ? ' are selected'\n                    : ' is selected'}\n                </h1>\n\n                <button\n                  type=\"button\"\n                  className=\"App__clear\"\n                  onClick={this.clearSelectedGoods}\n                >\n                  Clear\n                </button>\n              </>\n            )\n            : (\n              <h1 className=\"App__title\">\n                No goods selected\n              </h1>\n            )}\n        </header>\n\n        <ul className=\"GoodsList\">\n          {goodsFromServer.map(good => (\n            <div className=\"GoodsContainer\">\n              <li\n                className={classNames(\n                  'Good',\n                  {\n                    'Good--active': selectedGoods.includes(good),\n                  },\n                )}\n              >\n                {good}\n              </li>\n\n              {!selectedGoods.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"Good__remove\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )}\n            </div>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}